// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Nav should render correctly in "debug" mode 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Nav
    debug={true}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="lh-100"
>
        <h6
                className="mb-0 text-white lh-100"
        >
                New York Times
        </h6>
        <small>
                Since 1851
        </small>
</div>,
      "className": "d-flex align-items-center p-3 my-3 text-white-50 bg-purple rounded shadow-sm",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h6
            className="mb-0 text-white lh-100"
>
            New York Times
</h6>,
          <small>
            Since 1851
</small>,
        ],
        "className": "lh-100",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "New York Times",
            "className": "mb-0 text-white lh-100",
          },
          "ref": null,
          "rendered": "New York Times",
          "type": "h6",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Since 1851",
          },
          "ref": null,
          "rendered": "Since 1851",
          "type": "small",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="lh-100"
>
          <h6
                    className="mb-0 text-white lh-100"
          >
                    New York Times
          </h6>
          <small>
                    Since 1851
          </small>
</div>,
        "className": "d-flex align-items-center p-3 my-3 text-white-50 bg-purple rounded shadow-sm",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h6
              className="mb-0 text-white lh-100"
>
              New York Times
</h6>,
            <small>
              Since 1851
</small>,
          ],
          "className": "lh-100",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "New York Times",
              "className": "mb-0 text-white lh-100",
            },
            "ref": null,
            "rendered": "New York Times",
            "type": "h6",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Since 1851",
            },
            "ref": null,
            "rendered": "Since 1851",
            "type": "small",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
